<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:SLC_LayoutEditor.Controls">
    <Style TargetType="ToggleButton">
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundColorBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderThickness" Value="1.5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="500">
                        <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          TextElement.Foreground="{TemplateBinding Foreground}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBackColorBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource AccentPressedColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AccentPressedColorBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource AccentBackHoverColorBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource AccentHoverColorBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource AccentHoverColorBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundHoverColorBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ButtonBorderHoverColorBrush}"/>
                    <Setter Property="Background" Value="{DynamicResource ButtonBorderHoverColorBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="IsChecked" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource AccentBackPressedColorBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource AccentPressedColorBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource AccentPressedColorBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed" Value="True"/>
                    <Condition Property="IsChecked" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressedColorBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressedColorBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource ButtonBorderPressedColorBrush}"/>
                </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledColorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource DisabledColorBrush}"/>
                <Setter Property="Background" Value="{DynamicResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ToggleDeckViewButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="Content" Value="{DynamicResource ShowAllDecks}"/>
        <Setter Property="ToolTip" Value="Show all decks"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Width" Value="36"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="Margin" Value="16,0"/>
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type ToggleButton}">
                    <Path Name="path" Stretch="Uniform"
                          Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}"
                          Data="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Content, Converter={StaticResource StringToGeometryConverter}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Content" Value="{DynamicResource ShowOneDeck}"/>
                <Setter Property="ToolTip" Value="Show one deck at a time"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>