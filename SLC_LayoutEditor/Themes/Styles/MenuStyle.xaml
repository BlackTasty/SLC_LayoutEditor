<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:SLC_LayoutEditor.Converter">
    <converter:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
    
    <Style TargetType="MenuItem">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MenuItemHoverColorBrush}"/>
        <Setter Property="Template" Value="{DynamicResource MenuItemTemplate}"/>
        <Setter Property="Padding" Value="4,2"/>
    </Style>

    <Style TargetType="Menu">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundColorBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True"
                            CornerRadius="4">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ContextMenu">
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColorBrush}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundColorBrush}"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="TextElement.FontSize" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border" CornerRadius="4"
                            Background="{TemplateBinding Background}"
                            BorderThickness="1.5" BorderBrush="{TemplateBinding BorderBrush}">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" 
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="True" Padding="4">
            <Grid VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="menuHeader"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" 
                                  Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" 
                                  Width="16"/>
                <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
                      Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="0" Visibility="Collapsed" 
                      VerticalAlignment="Center"/>
                <TextBlock x:Name="TextElement" Text="{TemplateBinding Header}" 
                           Grid.Column="1"
                           Margin="{TemplateBinding Padding}"
                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Text="{TemplateBinding InputGestureText}" 
                           Grid.Column="2"
                           VerticalAlignment="Center"
                           Margin="16,0,8,0"
                           FontSize="{Binding ElementName=TextElement, Path=FontSize}"
                           FontFamily="{Binding ElementName=TextElement, Path=FontFamily}"
                           SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                           Visibility="{TemplateBinding InputGestureText, Converter={StaticResource NotNullToVisibilityConverter}}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondaryColorBrush}"/>
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="{DynamicResource DisabledColorBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                       IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                       Placement="Bottom" PlacementTarget="{Binding ElementName=templateRoot}">
                    <Border x:Name="SubMenuBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" 
                            Background="{TemplateBinding Background}" Padding="0" CornerRadius="6">
                        <ScrollViewer x:Name="SubMenuScrollViewer" 
                                      Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                      Background="{TemplateBinding Background}" Margin="0" Padding="0">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                    <Rectangle x:Name="OpaqueRect" RadiusX="6" RadiusY="6"
                                               Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                               Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                KeyboardNavigation.TabNavigation="Cycle"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource BackgroundLightBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                <Setter Property="Foreground" TargetName="TextElement" Value="#FF707070"/>
            </Trigger>
            <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource BackgroundLightBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MenuSeparatorStyle" TargetType="Separator">
        <Setter Property="Margin" Value="-26,2,4,2"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderThickness" Value="0,1,0,0"/>
    </Style>
</ResourceDictionary>