<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:SLC_LayoutEditor.Converter"
                    xmlns:controls="clr-namespace:SLC_LayoutEditor.Controls">
    <converter:StringToGeometryConverter x:Key="StringToGeometryConverter"/>

    <Style TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreenButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
    </Style>

    <Style x:Key="YellowButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonWarnBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonWarnBorderColorBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonWarnBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonWarnBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RedButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonErrorBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonErrorBorderColorBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonErrorBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonErrorBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddRowButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas>
                        <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}"
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                            <controls:RoundedCornersPolygon.Points>
                                <PointCollection>
                                    <Point X="0" Y="0"/>
                                    <Point X="30" Y="0"/>
                                    <Point X="30" Y="30"/>
                                </PointCollection>
                            </controls:RoundedCornersPolygon.Points>
                        </controls:RoundedCornersPolygon>
                        <TextBlock Text="+" Foreground="{TemplateBinding Foreground}" Margin="17,-4,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddColumnButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas>
                        <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}" 
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                            <controls:RoundedCornersPolygon.Points>
                                <PointCollection>
                                    <Point X="0" Y="30"/>
                                    <Point X="30" Y="30"/>
                                    <Point X="0" Y="0"/>
                                </PointCollection>
                            </controls:RoundedCornersPolygon.Points>
                        </controls:RoundedCornersPolygon>
                        <TextBlock Text="+" Foreground="{TemplateBinding Foreground}" Margin="3,9,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddRowButtonLargeStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas>
                        <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}"
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                            <controls:RoundedCornersPolygon.Points>
                                <PointCollection>
                                    <Point X="0" Y="0"/>
                                    <Point X="60" Y="0"/>
                                    <Point X="60" Y="60"/>
                                </PointCollection>
                            </controls:RoundedCornersPolygon.Points>
                        </controls:RoundedCornersPolygon>
                        <TextBlock Text="+" Foreground="{TemplateBinding Foreground}" Margin="17,-4,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddColumnButtonLargeStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas>
                        <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}" 
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                            <controls:RoundedCornersPolygon.Points>
                                <PointCollection>
                                    <Point X="0" Y="60"/>
                                    <Point X="60" Y="60"/>
                                    <Point X="0" Y="0"/>
                                </PointCollection>
                            </controls:RoundedCornersPolygon.Points>
                        </controls:RoundedCornersPolygon>
                        <TextBlock Text="+" Foreground="{TemplateBinding Foreground}" Margin="3,9,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SelectButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="Padding" Value="5.5"/>

        <Setter Property="ContentTemplate" Value="{DynamicResource IconButtonTemplate}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemoveRowButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonErrorBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonErrorBorderColorBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas>
                        <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}" 
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                            <controls:RoundedCornersPolygon.Points>
                                <PointCollection>
                                    <Point X="0" Y="30"/>
                                    <Point X="30" Y="30"/>
                                    <Point X="0" Y="0"/>
                                </PointCollection>
                            </controls:RoundedCornersPolygon.Points>
                        </controls:RoundedCornersPolygon>
                        <TextBlock Text="-" Foreground="{TemplateBinding Foreground}" Margin="5,9,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonErrorBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonErrorBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RemoveColumnButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonErrorBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonErrorBorderColorBrush}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas>
                        <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}"
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                            <controls:RoundedCornersPolygon.Points>
                                <PointCollection>
                                    <Point X="0" Y="0"/>
                                    <Point X="30" Y="0"/>
                                    <Point X="30" Y="30"/>
                                </PointCollection>
                            </controls:RoundedCornersPolygon.Points>
                        </controls:RoundedCornersPolygon>
                        <TextBlock Text="-" Foreground="{TemplateBinding Foreground}" Margin="18,-4,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonErrorBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonErrorBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Stroke" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" 
           BasedOn="{StaticResource {x:Type Button}}" 
           x:Key="IconButton">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ContentTemplate" Value="{DynamicResource IconButtonTemplate}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource EyeForegroundHoverColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource EyeForegroundPressedColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" 
           BasedOn="{StaticResource {x:Type Button}}" 
           x:Key="ErrorIconButtonStyle">
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ContentTemplate" Value="{DynamicResource IconButtonTemplate}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{StaticResource ButtonErrorBorderColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonErrorBackgroundHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonErrorBorderPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonErrorBackgroundHoverColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonErrorBorderPressedColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="BorderedIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{StaticResource DisabledColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundWarnIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource WarnForegroundColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="30" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonWarnBorderHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ButtonWarnBorderPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonWarnBorderHoverColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonWarnBorderPressedColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FilledLargeIconButton" TargetType="Button" BasedOn="{StaticResource BorderedIconButton}">
        <Setter Property="Background" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundDarkBrush}"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Width" Value="56"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="Margin" Value="16"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="200" BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource BackgroundLightBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource BackgroundDarkBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FilledIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundHoverColorBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource ButtonBackgroundPressedColorBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledColorBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DisabledColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AddDeckButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource ButtonBorderColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource RemoveDeckButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource RemoveDeckButtonBackgroundBrush}"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="12,0,7,12" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ForegroundSecondaryColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RemoveDeckButtonHoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonBorderHoverColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource RemoveDeckButtonPressedBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ButtonBorderPressedColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MakeTemplateButtonStyle" TargetType="Button" BasedOn="{StaticResource AddDeckButtonStyle}">
        <Setter Property="Foreground" Value="{StaticResource AccentColorBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="0,12,12,7" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentHoverColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource AccentPressedColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RemoveDeckButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColorBrush}"/>
        <Setter Property="Background" Value="{StaticResource RemoveDeckButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource RemoveDeckButtonBackgroundBrush}"/>
        <Setter Property="Height" Value="75"/>
        <Setter Property="Width" Value="75"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="40" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource RemoveDeckButtonHoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource RemoveDeckButtonHoverBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource RemoveDeckHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource RemoveDeckButtonPressedBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource RemoveDeckButtonPressedBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource ButtonErrorBackgroundPressedColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource DisabledColorBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RemoveDeckButtonHoverBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RemoveDeckButtonHoverBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource RemoveDeckHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource RemoveDeckButtonPressedBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource RemoveDeckButtonPressedBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{StaticResource DisabledColorBrush}"/>
                <Setter Property="BorderBrush" Value="{StaticResource DisabledColorBrush}"/>
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="IconButtonTemplate" DataType="{x:Type Button}">
        <Path Name="path" Stretch="Uniform"
              Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}"
              Data="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Content, Converter={StaticResource StringToGeometryConverter}}"/>
    </DataTemplate>

    <Style x:Key="IconButtonStyle" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Content" Value="{StaticResource EyeOffOutline}"/>
        <Setter Property="Padding" Value="1,1.7,1,.3"/>
        <Setter Property="Foreground" Value="{StaticResource ForegroundSecondaryColorBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DockPanel}, Path=ShowProblems}"
                                 Value="True">
                <Setter Property="Content" Value="{StaticResource EyeOutline}"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Foreground" Value="{StaticResource WarnForegroundColorBrush}"/>
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonWarnBorderHoverColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{StaticResource ButtonWarnBorderPressedColorBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledColorBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>