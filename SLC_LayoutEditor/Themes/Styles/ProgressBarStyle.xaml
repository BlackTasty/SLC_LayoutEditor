<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converter="clr-namespace:SLC_LayoutEditor.Converter">
    <converter:ArcSizeConverter x:Key="ArcSizeConverter"/>
    <converter:StartPointConverter x:Key="StartPointConverter"/>
    <converter:ArcEndPointConverter x:Key="ArcEndPointConverter"/>
    <converter:RotateTransformCentreConverter x:Key="RotateTransformCentreConverter"/>
    <converter:NotZeroConverter x:Key="NotZeroConverter"/>

    <Style TargetType="ProgressBar">
        <Setter Property="Background" Value="{StaticResource BackdropColorBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BackdropColorBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ProgressBarColorBrush}"/>
        <Setter Property="Height" Value="2"/>
    </Style>

    <Style x:Key="NotificationProgressBar" TargetType="ProgressBar" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource NotificationProgressForeground}"/>
        <Setter Property="Margin" Value="-1"/>
        <Setter Property="Height" Value="NaN"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="4" RadiusY="4"/>
                            <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="4" RadiusY="4">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    
    <Style x:Key="MaterialDesignCircularProgressBar" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminateStoryboard"
                        RepeatBehavior="Forever"
                        TargetProperty="Angle"
                        TargetName="RotateTransform">
                            <DoubleAnimation From="0"
                               To="359"
                               Duration="0:0:2" />
                        </Storyboard>
                        <Storyboard x:Key="IsFullyIndeterminateStoryboard">
                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                             Storyboard.TargetName="FullyIndeterminateGridScaleTransform"
                                             Storyboard.TargetProperty="ScaleX">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation RepeatBehavior="Forever"
                               Storyboard.TargetName="RotateTransform"
                               Storyboard.TargetProperty="Angle"
                               From="00"
                               To="359"
                               Duration="0:0:1.25" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" ClipToBounds="False">
                        <Grid x:Name="FullyIndeterminateGrid">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform" ScaleX="0" />
                            </Grid.RenderTransform>
                        </Grid>
                        <Grid x:Name="PathGrid" Margin="2" />
                        <Canvas>
                            <Ellipse Width="{TemplateBinding Width}"
                                     Height="{TemplateBinding Height}"
                                     Fill="{TemplateBinding Background}" />
                            <Path x:Name="Path"
                                  Canvas.Left="2"
                                  Canvas.Top="2"
                                  RenderTransformOrigin="0, 0"
                                  Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness="3">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource StartPointConverter}, Mode=OneWay}">
                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
                                                <ArcSegment.Point>
                                                    <MultiBinding Converter="{StaticResource ArcEndPointConverter}" ConverterParameter="{x:Static converter:ArcEndPointConverter.ParameterMidPoint}">
                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                    </MultiBinding>
                                                </ArcSegment.Point>
                                            </ArcSegment>
                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
                                                <ArcSegment.Point>
                                                    <MultiBinding Converter="{StaticResource ArcEndPointConverter}">
                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                    </MultiBinding>
                                                </ArcSegment.Point>
                                            </ArcSegment>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform x:Name="RotateTransform" CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsIndeterminate, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Value, RelativeSource={RelativeSource Self}, Converter={StaticResource NotZeroConverter}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="IsIndeterminateStoryboard" Storyboard="{StaticResource IsIndeterminateStoryboard}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsIndeterminate" Value="True" />
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="Value" Value="0" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="IsFullyIndeterminateStoryboard" Storyboard="{StaticResource IsFullyIndeterminateStoryboard}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="20" />
    </Style>

    <Style x:Key="MaterialDesignThinCircularProgressBar" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IsIndeterminateStoryboard"
                        RepeatBehavior="Forever"
                        TargetProperty="Angle"
                        TargetName="RotateTransform">
                            <DoubleAnimation From="0"
                               To="359"
                               Duration="0:0:2" />
                        </Storyboard>
                        <Storyboard x:Key="IsFullyIndeterminateStoryboard">
                            <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever"
                                             Storyboard.TargetName="FullyIndeterminateGridScaleTransform"
                                             Storyboard.TargetProperty="ScaleX">
                                <SplineDoubleKeyFrame KeyTime="0" Value="0.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:1" Value="1.0" />
                                <SplineDoubleKeyFrame KeyTime="0:0:4" Value="0.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimation RepeatBehavior="Forever"
                               Storyboard.TargetName="RotateTransform"
                               Storyboard.TargetProperty="Angle"
                               From="00"
                               To="359"
                               Duration="0:0:1.25" />
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="TemplateRoot" ClipToBounds="False">
                        <Grid x:Name="FullyIndeterminateGrid">
                            <Grid.RenderTransform>
                                <ScaleTransform x:Name="FullyIndeterminateGridScaleTransform" ScaleX="0" />
                            </Grid.RenderTransform>
                        </Grid>
                        <Grid x:Name="PathGrid" Margin="2" />
                        <Canvas>
                            <Ellipse Width="{TemplateBinding Width}"
                                     Height="{TemplateBinding Height}"
                                     Fill="{TemplateBinding Background}" />
                            <Path x:Name="Path"
                                  Canvas.Left="2"
                                  Canvas.Top="2"
                                  RenderTransformOrigin="0, 0"
                                  Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness="1.5">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathFigure StartPoint="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource StartPointConverter}, Mode=OneWay}">
                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
                                                <ArcSegment.Point>
                                                    <MultiBinding Converter="{StaticResource ArcEndPointConverter}" ConverterParameter="{x:Static converter:ArcEndPointConverter.ParameterMidPoint}">
                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                    </MultiBinding>
                                                </ArcSegment.Point>
                                            </ArcSegment>
                                            <ArcSegment Size="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource ArcSizeConverter}, Mode=OneWay}" SweepDirection="Clockwise">
                                                <ArcSegment.Point>
                                                    <MultiBinding Converter="{StaticResource ArcEndPointConverter}">
                                                        <Binding ElementName="PathGrid" Path="ActualWidth" />
                                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}" />
                                                        <Binding ElementName="FullyIndeterminateGridScaleTransform" Path="ScaleX" />
                                                    </MultiBinding>
                                                </ArcSegment.Point>
                                            </ArcSegment>
                                        </PathFigure>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <RotateTransform x:Name="RotateTransform" CenterX="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" CenterY="{Binding ElementName=PathGrid, Path=ActualWidth, Converter={StaticResource RotateTransformCentreConverter}, Mode=OneWay}" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsIndeterminate, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Value, RelativeSource={RelativeSource Self}, Converter={StaticResource NotZeroConverter}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard Name="IsIndeterminateStoryboard" Storyboard="{StaticResource IsIndeterminateStoryboard}" />
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsIndeterminateStoryboard" />
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsIndeterminate" Value="True" />
                                <Condition Property="IsVisible" Value="True" />
                                <Condition Property="Value" Value="0" />
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Name="IsFullyIndeterminateStoryboard" Storyboard="{StaticResource IsFullyIndeterminateStoryboard}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <RemoveStoryboard BeginStoryboardName="IsFullyIndeterminateStoryboard" />
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Width" Value="20" />
    </Style>
</ResourceDictionary>