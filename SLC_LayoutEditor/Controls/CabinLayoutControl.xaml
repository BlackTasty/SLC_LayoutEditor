<DockPanel x:Class="SLC_LayoutEditor.Controls.CabinLayoutControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
        xmlns:local="clr-namespace:SLC_LayoutEditor.Controls"
        mc:Ignorable="d"
        d:DesignHeight="450" d:DesignWidth="800">
    <!--<local:BindableScrollBar BoundScrollViewer="{Binding ElementName=deck_scroll}" Orientation="Horizontal"
                             DockPanel.Dock="Bottom"
                             Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsHorizontalScrollBarVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>-->
    <Border BorderThickness="1.5" CornerRadius="6" Background="{DynamicResource BackgroundColorBrush}">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="{DynamicResource LayoutingModeBorderBrush}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=CabinLayout.IsTemplate}" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource TemplatingModeBorderBrush}"/>
                    </DataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Margin" Value="0,0,0,13"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Margin" Value="0,0,13,0"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Margin" Value="0,0,13,13"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid UseLayoutRounding="True" SnapsToDevicePixels="True" Margin="-1,0,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="2" Background="{DynamicResource TemplatingModeBackBrush}"
                    Visibility="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=CabinLayout.IsTemplate, FallbackValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <ScrollViewer x:Name="deck_scroll" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto" Grid.RowSpan="2">
                    <ScrollViewer.Style>
                        <Style TargetType="ScrollViewer" BasedOn="{StaticResource {x:Type ScrollViewer}}">
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Margin" Value="0,0,0,-14"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Margin" Value="0,0,-14,0"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                        <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Margin" Value="0,0,-14,-14"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ScrollViewer.Style>
                    <StackPanel x:Name="container_decks" Grid.IsSharedSizeScope="True" Margin="0,91,0,96"
                                Loaded="container_decks_Loaded"
                                SizeChanged="deck_scroll_SizeChanged">

                </StackPanel>
            </ScrollViewer>
            <Border Grid.RowSpan="2">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Margin" Value="-1.5,0,0,0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=IsSidebarOpen}" Value="False">
                                <Setter Property="Margin" Value="0"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <StackPanel x:Name="cards_layoutIssues" Orientation="Horizontal" Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="4"
                        Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout, Converter={StaticResource NotNullToVisibilityConverter}, FallbackValue=Collapsed}"
                        local:GuideAssist.Title="{StaticResource GuideIssueCardsTitle}"
                        local:GuideAssist.Description="{StaticResource GuideLayoutIssueCardsDescription}"
                        local:GuideAssist.HasGuide="True"
                        local:GuideAssist.IsCircleCutout="False"
                        local:GuideAssist.TextPosition="Bottom"
                        local:GuideAssist.CornerRadius="20"
                        Cursor="Help"
                        ContextMenu="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=GuideMenu}">
                <Border Style="{DynamicResource ChipStyle}" Background="{DynamicResource WarnForegroundColorBrush}"
                        ToolTip="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.MinorIssuesList}"
                        Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.HasMinorIssues, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CardTextStyle}">
                                <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.MinorIssuesCountSum, StringFormat={}{0} minor issues}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.MinorIssuesCountSum}" Value="1">
                                        <Setter Property="Text" Value="1 minor issue"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Border>
                <Border Style="{DynamicResource ChipStyle}" Background="{DynamicResource ErrorForegroundColorBrush}"
                        ToolTip="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.SevereIssuesList}"
                        Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.HasSevereIssues, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
                    <TextBlock>
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CardTextStyle}">
                                <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.SevereIssuesCountSum, StringFormat={}{0} severe issues}"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.SevereIssuesCountSum}" Value="1">
                                        <Setter Property="Text" Value="1 severe issue"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </Border>
                <Border Style="{DynamicResource ChipStyle}" Background="{DynamicResource ButtonForegroundColorBrush}"
                        Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=CabinLayout.HasAnyIssues, Converter={StaticResource InverseBooleanToVisibilityConverter}}">
                    <TextBlock Text="No issues found!" Style="{StaticResource CardTextStyle}"/>
                </Border>
            </StackPanel>
            <ToggleButton HorizontalAlignment="Right" Style="{DynamicResource ToggleDeckViewButtonStyle}" VerticalAlignment="Center" Visibility="Collapsed"/>
            <Border Height="55" MinWidth="460">
            <Border.Style>
                    <Style TargetType="Border" BasedOn="{StaticResource CardLayoutTitleStyle}">
                        <Setter Property="BorderThickness" Value="1.5,0,1.5,1.5"/>
                        <Setter Property="Margin" Value="0,-2,0,0"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource LayoutingModeBorderBrush}"/>
                        <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=CabinLayout.IsTemplate, FallbackValue=False}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource TemplatingModeBorderBrush}"/>
                            </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
                <DockPanel Margin="-1.5,0,-1.5,-1.5">
                    <Button x:Name="btn_makeTemplate" DockPanel.Dock="Left" Click="MakeTemplate_Click"
                            local:GuideAssist.Title="{StaticResource GuideMakeTemplateTitle}"
                            local:GuideAssist.Description="{StaticResource GuideMakeTemplateDescription}"
                            local:GuideAssist.HasGuide="True"
                            local:GuideAssist.TextPosition="Bottom"
                            local:GuideAssist.RadiusOffset="-24"
                            local:GuideAssist.HighlightXOffset="-2"
                            Cursor="Help"
                            ContextMenu="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=GuideMenu}"
                            Margin="-10.5,-10.5,15.5,-8.5"
                            Padding="14.5,16,16.5,14.5"
                            Width="53" Height="53">
                    <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource MakeTemplateButtonStyle}">
                                <Setter Property="ToolTip" Value="Make a template out of this layout"/>
                            <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=CabinLayout.IsTemplate, FallbackValue=False}" Value="True">
                                        <Setter Property="ToolTip" Value="Make a template out of the current template"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                    <Button x:Name="btn_addDeck" DockPanel.Dock="Right" Content="{DynamicResource Add}" Click="AddCabinDeck_Click"
                            Style="{StaticResource AddDeckButtonStyle}"
                            ToolTip="Add a new deck to your layout"
                            local:GuideAssist.Title="{StaticResource GuideAddDeckTitle}"
                            local:GuideAssist.Description="{StaticResource GuideAddDeckDescription}"
                            local:GuideAssist.HasGuide="True"
                            local:GuideAssist.TextPosition="Bottom"
                            local:GuideAssist.RadiusOffset="-28"
                            local:GuideAssist.HighlightXOffset="2"
                            Cursor="Help"
                            ContextMenu="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=GuideMenu}"
                            Margin="15.5,-9,-6.5,-7"
                            Padding="16.5,16,14.5,14.5"
                            Width="53" Height="53"/>
                    <Button x:Name="btn_reloadLayout" Content="{DynamicResource Refresh}" Click="ReloadDeck_Click"
                            Margin="-4,0,24,0" Height="32" Width="32" Padding="6,6,4,6"
                            local:GuideAssist.Title="{StaticResource GuideReloadLayoutTitle}"
                            local:GuideAssist.Description="{StaticResource GuideReloadLayoutDescription}"
                            local:GuideAssist.HasGuide="True"
                            local:GuideAssist.TextPosition="Bottom"
                            local:GuideAssist.RadiusOffset="-20"
                            Cursor="Help"
                            ContextMenu="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=GuideMenu}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource WarnIconButtonStyle}">
                            <Setter Property="ToolTip" Value="Force the editor to reload the layout from file. Unsaved changes are lost!"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=CabinLayout.IsTemplate, FallbackValue=False}" Value="True">
                                    <Setter Property="ToolTip" Value="Force the editor to reload the template from file. Unsaved changes are lost!"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                    <Button x:Name="btn_deleteLayout" DockPanel.Dock="Right" Content="{DynamicResource Trash}" Click="DeleteLayout_Click"
                            Margin="24,0,0,0" Height="32" Width="32" Padding="6"
                            local:GuideAssist.Title="{StaticResource GuideDeleteLayoutTitle}"
                            local:GuideAssist.Description="{StaticResource GuideDeleteLayoutDescription}"
                            local:GuideAssist.HasGuide="True"
                            local:GuideAssist.TextPosition="Bottom"
                            local:GuideAssist.RadiusOffset="-24"
                            Cursor="Help"
                            ContextMenu="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=GuideMenu}">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource ErrorIconButtonStyle}">
                            <Setter Property="ToolTip" Value="Delete this cabin layout. This cannot be undone!"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=CabinLayout.IsTemplate, FallbackValue=False}" Value="True">
                                    <Setter Property="ToolTip" Value="Delete this template. This cannot be undone!"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
                <StackPanel>
                    <TextBlock Margin="0,2,0,0">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource CabinLayoutTitleStyle}">
                                <Setter Property="Text" Value="Cabin layout"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=CabinLayout.IsTemplate, FallbackValue=False}" Value="True">
                                        <Setter Property="Text" Value="Template"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="8,0">
                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=LayoutOverviewTitle, FallbackValue=No layout selected}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource CabinLayoutNameStyle}">
                                        <Setter Property="Margin" Value="0,0,4,4"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=HasUnsavedChanges}" Value="True">
                                                <Setter Property="FontStyle" Value="Italic"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=local:CabinLayoutControl, Mode=FindAncestor}, Path=CabinLayout}" Value="{x:Null}">
                                                <Setter Property="Margin" Value="0,0,8,4"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <Button x:Name="btn_editLayoutName" Style="{StaticResource ForegroundIconButtonStyle}" Content="{StaticResource Edit}" ToolTip="Edit layout name"
                                    Click="EditCabinLayoutName_Click" Margin="0,-2,0,1"
                                    local:GuideAssist.Title="{StaticResource GuideEditLayoutNameTitle}"
                                    local:GuideAssist.Description="{StaticResource GuideEditLayoutNameDescription}"
                                    local:GuideAssist.HasGuide="True"
                                    local:GuideAssist.TextPosition="Bottom"
                                    local:GuideAssist.RadiusOffset="-10"
                                    local:GuideAssist.HighlightYOffset="1"
                                    Cursor="Help"
                                    ContextMenu="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:CabinLayoutControl}, Path=GuideMenu}"/>
                        </StackPanel>
                </StackPanel>
            </DockPanel>
        </Border>
        </Grid>
    </Border>
</DockPanel>