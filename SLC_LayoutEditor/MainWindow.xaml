<Window x:Class="SLC_LayoutEditor.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:SLC_LayoutEditor.Controls"
        xmlns:vm="clr-namespace:SLC_LayoutEditor.ViewModel"
        xmlns:dvm="clr-namespace:SLC_LayoutEditor.ViewModel.DesignTime"
        xmlns:notifications="clr-namespace:SLC_LayoutEditor.Controls.Notifications"
        TextElement.Foreground="{DynamicResource ForegroundColorBrush}"
        Background="{DynamicResource BackgroundDarkBrush}"
        mc:Ignorable="d" Closing="Window_Closing"
        Title="{Binding Title}" MinHeight="600" MinWidth="1100"
        d:DataContext="{d:DesignInstance {x:Type dvm:MainDesignViewModel}, IsDesignTimeCreatable=True}"
        Icon="Resources/icon.ico" StateChanged="Window_StateChanged">
    <Window.DataContext>
        <vm:MainViewModel/>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Key="E" Modifiers="Ctrl" Command="{Binding OpenLayoutFolderCommand}" CommandParameter="{Binding EditorViewModel}"/>
        <KeyBinding Key="O" Modifiers="Ctrl" Command="{Binding OpenLayoutInTextEditor}" CommandParameter="{Binding EditorViewModel}"/>
        <KeyBinding Key="S" Modifiers="Ctrl" Command="{Binding SaveLayoutCommand}" CommandParameter="{Binding EditorViewModel}"/>
        <KeyBinding Key="S" Modifiers="Ctrl+Shift" Command="{Binding SaveLayoutAsCommand}" CommandParameter="{Binding EditorViewModel}"/>
        <KeyBinding Key="A" Modifiers="Ctrl+Shift" Command="{Binding SelectAllSlotsCommand}" CommandParameter="{Binding EditorViewModel}"/>
        <KeyBinding Key="T" Modifiers="Ctrl" Command="{Binding MakeTemplateCommand}" CommandParameter="{Binding EditorViewModel}"/>
        <KeyBinding Key="R" Modifiers="Ctrl" Command="{Binding RenameLayoutCommand}" CommandParameter="{Binding EditorViewModel}"/>
        <KeyBinding Key="R" Modifiers="Ctrl+Alt" Command="{Binding ReloadLayoutCommand}" CommandParameter="{Binding EditorViewModel}"/>
        <KeyBinding Key="A" Modifiers="Ctrl" Command="{Binding SelectAllSlotsOnDeckCommand}" CommandParameter="{Binding SelectedDeck}"/>
        <KeyBinding Key="K" Modifiers="Ctrl" Command="{Binding ShowKeybindsWindowCommand}"/>

        <KeyBinding Key="Esc" Command="{Binding CancelDialogCommand}" CommandParameter="{Binding Dialog}"/>
    </Window.InputBindings>
    <Grid>
        <DockPanel>
            <DockPanel.Style>
                <Style TargetType="DockPanel">
                    <Setter Property="Effect" Value="{x:Null}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsDialogOpen}" Value="True">
                            <Setter Property="Effect" Value="{StaticResource DisableBlur}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DockPanel.Style>
            <DockPanel DockPanel.Dock="Top">
                <Button Content="Return to editor" Click="ReturnToEditor_Click" FontSize="12"
                        DockPanel.Dock="Right" Margin="24,0,0,0"
                        Visibility="{Binding IsViewNotEditor, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <controls:Updater DockPanel.Dock="Right" Margin="32,0,8,0" InstallUpdateClicked="Updater_InstallUpdateClicked"/>
                <DockPanel LastChildFill="False">
                    <Menu Foreground="{StaticResource ForegroundColorBrush}" FontSize="14">
                        <MenuItem Height="40" Background="{DynamicResource BackgroundDarkBrush}">
                            <MenuItem.Style>
                                <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                    <Setter Property="Header" Value="Layout"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EditorViewModel.IsLayoutTemplate}" Value="True">
                                            <Setter Property="Header" Value="Template"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                            <MenuItem Command="{Binding RenameLayoutCommand}" 
                                      CommandParameter="{Binding EditorViewModel}" InputGestureText="Ctrl+R">
                                <MenuItem.Style>
                                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                        <Setter Property="Header" Value="Rename layout"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding EditorViewModel.IsLayoutTemplate}" Value="True">
                                                <Setter Property="Header" Value="Rename template"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <MenuItem Header="Save" Command="{Binding SaveLayoutCommand}" 
                                      CommandParameter="{Binding EditorViewModel}" InputGestureText="Ctrl+S"/>
                            <MenuItem Header="Save as..." Command="{Binding SaveLayoutAsCommand}" 
                                      CommandParameter="{Binding EditorViewModel}" InputGestureText="Ctrl+Shift+S"/>
                            <Separator Style="{StaticResource MenuSeparatorStyle}"/>
                            <MenuItem Header="Make into template" Command="{Binding MakeTemplateCommand}"
                                      CommandParameter="{Binding EditorViewModel}" InputGestureText="Ctrl+T"/>
                            <MenuItem Command="{Binding ReloadLayoutCommand}"
                                      CommandParameter="{Binding EditorViewModel}" InputGestureText="Ctrl+Alt+R">
                                <MenuItem.Style>
                                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                        <Setter Property="Header" Value="Reload layout"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding EditorViewModel.IsLayoutTemplate}" Value="True">
                                                <Setter Property="Header" Value="Reload template"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <MenuItem Header="Open layout file" Command="{Binding OpenLayoutInTextEditor}" 
                                      CommandParameter="{Binding EditorViewModel}" InputGestureText="Ctrl+O"
                                      Visibility="{Binding EditorViewModel.IsLayoutTemplate, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                            <MenuItem Header="Open in explorer" Command="{Binding OpenLayoutFolderCommand}" 
                                      CommandParameter="{Binding EditorViewModel}" InputGestureText="Ctrl+E"
                                      Visibility="{Binding EditorViewModel.IsLayoutTemplate, Converter={StaticResource InverseBooleanToVisibilityConverter}}"/>
                        </MenuItem>
                        <MenuItem Header="Editor" Height="40" Background="{DynamicResource BackgroundDarkBrush}">
                            <MenuItem Header="Settings" Click="Settings_Click"/>
                            <MenuItem Header="Welcome screen" Click="OpenWelcomeScreen_Click"/>
                            <Separator Style="{StaticResource MenuSeparatorStyle}"/>
                            <MenuItem Header="Search for updates" Click="SearchUpdates_Click" 
                              IsEnabled="{Binding IsSearching, Converter={StaticResource InverseBooleanConverter}}"/>
                        </MenuItem>
                        <MenuItem Header="Help" Height="40" Background="{DynamicResource BackgroundDarkBrush}">
                            <MenuItem Click="ToggleGuide_Click">
                                <MenuItem.Style>
                                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                        <Setter Property="Header" Value="Start tour"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsTourRunning}" Value="True">
                                                <Setter Property="Header" Value="Cancel tour"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </MenuItem.Style>
                            </MenuItem>
                            <MenuItem Header="Show keybinds" Command="{Binding ShowKeybindsWindowCommand}"
                                      InputGestureText="Ctrl+K"/>
                            <Separator Style="{StaticResource MenuSeparatorStyle}"/>
                            <MenuItem Header="What's new?" Click="Changelog_Click"/>
                            <MenuItem Header="Roadmap" Click="Roadmap_Click"/>
                        </MenuItem>
                    </Menu>
                    <Border BorderThickness=".75,0" CornerRadius=".75" Margin="16,6"
                        BorderBrush="{DynamicResource SeparatorColorBrush}"
                        Visibility="Collapsed"/>
                    <DockPanel Margin="0,0,12,0" Visibility="Collapsed">
                        <Button Style="{StaticResource DefaultIconButtonStyle}" Content="{StaticResource Undo}" Margin="4,0" ToolTip="Undo"
                        Click="Undo_Click" IsEnabled="{Binding History.CanUndo}"/>
                        <Button Style="{StaticResource DefaultIconButtonStyle}" Content="{StaticResource Redo}" Margin="4,0" ToolTip="Redo"
                        Click="Redo_Click" IsEnabled="{Binding History.CanRedo}"/>
                    </DockPanel>
                </DockPanel>
            </DockPanel>
            <ContentPresenter Content="{Binding Content}"/>
        </DockPanel>
        <notifications:NotificationBar HorizontalAlignment="Right" Panel.ZIndex="100" Margin="0,48,0,96"/>
        <Grid Background="{StaticResource BackdropColorBrush}"
              Visibility="{Binding IsDialogOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border BorderBrush="{DynamicResource ButtonBorderColorBrush}" BorderThickness="2" CornerRadius="8"
                    Background="{StaticResource BackgroundColorBrush}" UseLayoutRounding="True"
                    HorizontalAlignment="Center" VerticalAlignment="Center" Padding="4,4,4,0"
                    Margin="64">
                <ContentPresenter Content="{Binding Dialog}"/>
            </Border>
        </Grid>
    </Grid>
</Window>
