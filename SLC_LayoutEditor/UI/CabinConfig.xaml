<Grid x:Class="SLC_LayoutEditor.UI.CabinConfig"
           xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
           xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
           xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
           xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
           xmlns:vm="clr-namespace:SLC_LayoutEditor.ViewModel"
           xmlns:controls="clr-namespace:SLC_LayoutEditor.Controls"
           xmlns:enum="clr-namespace:SLC_LayoutEditor.Core.Enum"
           xmlns:converter="clr-namespace:SLC_LayoutEditor.Converter"
           xmlns:local="clr-namespace:SLC_LayoutEditor.UI"
           mc:Ignorable="d" 
           d:DesignHeight="450" d:DesignWidth="800">
    <Grid.DataContext>
        <vm:CabinConfigViewModel/>
    </Grid.DataContext>
    <Grid.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converter:NotNullToVisibilityConverter x:Key="NotNullToVisibilityConverter"/>
        <converter:NotNullToBooleanConverter x:Key="NotNullToBooleanConverter"/>
        <converter:GreaterThanConverter x:Key="GreaterThanConverter"/>
    </Grid.Resources>
    <DockPanel>
        <DockPanel Width="270" Margin="8" LastChildFill="False">
            <TextBlock Text="Airplane" Style="{StaticResource DefaultTextStyle}" DockPanel.Dock="Top"/>
            <DockPanel DockPanel.Dock="Top">
                <Button DockPanel.Dock="Right" Width="22" Height="22" ToolTip="Add new airplane"
                    Click="AddAirplane_Click">
                    <Button.Content>
                        <TextBlock Text="+" Margin="0,-5,0,0" FontWeight="Bold" FontSize="16"/>
                    </Button.Content>
                </Button>
                <ComboBox Margin="4" ItemsSource="{Binding LayoutSets}"
                  SelectedItem="{Binding SelectedLayoutSet}"/>
            </DockPanel>
            <TextBlock Text="Cabin layout" Style="{StaticResource DefaultTextStyle}" DockPanel.Dock="Top"/>
            <ProgressBar DockPanel.Dock="Top" IsIndeterminate="True"
                     Margin="4,0" Visibility="{Binding SelectedLayoutSet.IsLoadingLayouts, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed, TargetNullValue=Collapsed}"/>
            <DockPanel DockPanel.Dock="Top">
                <Button DockPanel.Dock="Right" Width="22" Height="22" ToolTip="Add new layout"
                    Click="AddCabinLayout_Click">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedLayoutSet, Converter={StaticResource NotNullToBooleanConverter}}"
                                           Value="True"/>
                                        <Condition Binding="{Binding SelectedLayoutSet.IsLoadingLayouts}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Button.Content>
                        <TextBlock Text="+" Margin="0,-5,0,0" FontWeight="Bold" FontSize="16"/>
                    </Button.Content>
                </Button>
                <ComboBox Margin="4" ItemsSource="{Binding SelectedLayoutSet.CabinLayouts, UpdateSourceTrigger=PropertyChanged}"
                  SelectedItem="{Binding SelectedCabinLayout}">
                    <ComboBox.Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding SelectedLayoutSet, Converter={StaticResource NotNullToBooleanConverter}}"
                                           Value="True"/>
                                        <Condition Binding="{Binding SelectedLayoutSet.IsLoadingLayouts}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                </MultiDataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </DockPanel>
            <StackPanel DockPanel.Dock="Top"
                        Visibility="{Binding SelectedCabinLayout, Converter={StaticResource NotNullToVisibilityConverter}}">
                <TextBlock Margin="4" FontSize="16" Style="{StaticResource DefaultTextStyle}"
                   Text="{Binding SelectedCabinLayout.PassengerCapacity, StringFormat={}Passenger capacity: {0}, FallbackValue=Passenger capacity: 0}"/>
                <UniformGrid Columns="5">
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="ECO"
                                          Capacity="{Binding SelectedCabinLayout.EconomyCapacity}"
                                          BoxBackground="{StaticResource EconomyClassColor}"
                                          ToolTip="Economy class"/>
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="BZ"
                                          Capacity="{Binding SelectedCabinLayout.BusinessCapacity}"
                                          BoxBackground="{StaticResource BusinessClassColor}"
                                          ToolTip="Business class"/>
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="PREM"
                                          Capacity="{Binding SelectedCabinLayout.PremiumCapacity}"
                                          BoxBackground="{StaticResource PremiumClassColor}"
                                          ToolTip="Premium class"/>
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="FIRST"
                                          Capacity="{Binding SelectedCabinLayout.FirstClassCapacity}"
                                          BoxBackground="{StaticResource FirstClassColor}"
                                          ToolTip="First class"/>
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="SUPER"
                                          Capacity="{Binding SelectedCabinLayout.SupersonicCapacity}"
                                          BoxBackground="{StaticResource SupersonicClassColor}"
                                          ToolTip="Supersonic class"/>
                </UniformGrid>
            </StackPanel>
            <Button DockPanel.Dock="Bottom" Margin="8,0" Content="Save layout" Click="SaveLayout_Click"
                IsEnabled="{Binding SelectedCabinLayout, Converter={StaticResource NotNullToBooleanConverter}}"/>
            <Expander DockPanel.Dock="Top" Margin="0,16,0,8">
                <Expander.Header>
                    <TextBlock FontSize="16">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedCabinLayout.ProblemCountSum, Converter={StaticResource GreaterThanConverter}}" Value="True">
                                        <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                        <Run Text="Problems ("/><Run Text="{Binding SelectedCabinLayout.ProblemCountSum, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, FallbackValue=0}"/><Run Text=")"/>
                    </TextBlock>
                </Expander.Header>
                <ScrollViewer VerticalScrollBarVisibility="Auto">
                    <StackPanel Margin="4">
                        <TextBlock Text="Problems across all decks" FontSize="18" Style="{StaticResource DefaultTextStyle}"/>
                        <TextBlock Visibility="Collapsed">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                    <Setter Property="Text" Value="No duplicate doors"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinLayout.HasNoDuplicateDoors, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Text" Value="Duplicate doors found!"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                    <Setter Property="Text" Value="No duplicate Economy Class seats"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinLayout.HasNoDuplicateEconomySeats, UpdateSourceTrigger=PropertyChanged}"
                                                     Value="False">
                                            <Setter Property="Text" Value="Duplicate Economy Class seats found!"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                    <Setter Property="Text" Value="No duplicate Business Class seats"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinLayout.HasNoDuplicateBusinessSeats, UpdateSourceTrigger=PropertyChanged}" 
                                                     Value="False">
                                            <Setter Property="Text" Value="Duplicate Business Class seats found!"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                    <Setter Property="Text" Value="No duplicate Premium Class seats"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinLayout.HasNoDuplicatePremiumSeats, UpdateSourceTrigger=PropertyChanged}"
                                                     Value="False">
                                            <Setter Property="Text" Value="Duplicate Premium Class seats found!"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                    <Setter Property="Text" Value="No duplicate First Class seats"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinLayout.HasNoDuplicateFirstClassSeats, UpdateSourceTrigger=PropertyChanged}" 
                                                     Value="False">
                                            <Setter Property="Text" Value="Duplicate First Class seats found!"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                    <Setter Property="Text" Value="No duplicate Supersonic Class seats"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinLayout.HasNoDuplicateSupersonicSeats, UpdateSourceTrigger=PropertyChanged}" 
                                                     Value="False">
                                            <Setter Property="Text" Value="Duplicate Supersonic Class seats found!"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                    <Setter Property="Text" Value="No duplicate Unavailable seats"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinLayout.HasNoDuplicateUnavailableSeats, UpdateSourceTrigger=PropertyChanged}" 
                                                     Value="False">
                                            <Setter Property="Text" Value="Duplicate Unavailable seats found!"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                    <Setter Property="Text" Value="Stairway positions valid"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinLayout.StairwaysValid, UpdateSourceTrigger=PropertyChanged}" 
                                                     Value="False">
                                            <Setter Property="Text" Value="Invalid stairway positions!"/>
                                            <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="Problems per deck" FontSize="18" Margin="0,16,0,0" Style="{StaticResource DefaultTextStyle}"/>
                        <DataGrid AutoGenerateColumns="False" Background="Transparent" HeadersVisibility="None"
                              GridLinesVisibility="None" BorderBrush="Transparent" CanUserAddRows="False" 
                              CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False"
                              CanUserSortColumns="False" HorizontalScrollBarVisibility="Disabled"
                              ItemsSource="{Binding SelectedCabinLayout.CabinDecks}">
                            <DataGrid.Resources>
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Transparent" />
                                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                            </DataGrid.Resources>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="Background" Value="Transparent"/>
                                </Style>
                            </DataGrid.RowStyle>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <DockPanel Visibility="{Binding CabinSlots, Converter={StaticResource NotNullToVisibilityConverter}}">
                                                <TextBlock FontSize="16" DockPanel.Dock="Top">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextStyle}">
                                                            <Setter Property="Text" Value="{Binding Floor, StringFormat={}Floor {0}}"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Floor}" Value="1">
                                                                    <Setter Property="Text" Value="Lower deck"/>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Floor}" Value="2">
                                                                    <Setter Property="Text" Value="Upper deck"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock DockPanel.Dock="Top">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                                            <Setter Property="Text" Value="Doors available"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding AreDoorsValid}" Value="False">
                                                                    <Setter Property="Text" Value="No doors for this deck!"/>
                                                                    <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock DockPanel.Dock="Top">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                                            <Setter Property="Text" Value="No duplicate doors"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding HasNoDuplicateDoors}" Value="False">
                                                                    <Setter Property="Text" Value="Duplicate doors found!"/>
                                                                    <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock DockPanel.Dock="Top">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                                            <Setter Property="Text" Value="Service start- and endpoints are valid"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding AreServicePointsValid}" Value="False">
                                                                    <Setter Property="Text" Value="Invalid service points!"/>
                                                                    <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock DockPanel.Dock="Top">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                                            <Setter Property="Text" Value="All seat rows covered by service"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding AreSeatsReachableByService}" Value="False">
                                                                    <Setter Property="Text" Value="Some rows aren't covered by service!"/>
                                                                    <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock DockPanel.Dock="Top">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                                            <Setter Property="Text" Value="Valid galley count"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding AreGalleysValid}" Value="False">
                                                                    <Setter Property="Text" Value="Insufficient galley slots for servicing!"/>
                                                                    <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                                <TextBlock DockPanel.Dock="Top">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock" BasedOn="{StaticResource LayoutProblemTextStyle}">
                                                            <Setter Property="Text" Value="Kitchen accessible (In-Flight services available)"/>
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding AreKitchensValid}" Value="False">
                                                                    <Setter Property="Text" Value="No kitchen available! (No In-Flight services)"/>
                                                                    <Setter Property="Foreground" Value="{StaticResource ErrorForegroundColor}"/>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </DockPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </ScrollViewer>
            </Expander>
        </DockPanel>
        <Border Width="1" Background="{StaticResource SlotSelectedColor}"/>
        <DockPanel Margin="8">
            <StackPanel DockPanel.Dock="Bottom">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Slot configuration " FontSize="16" Style="{StaticResource DefaultTextStyle}"/>
                    <TextBlock FontSize="16" Visibility="{Binding SelectedCabinSlot, Converter={StaticResource NotNullToVisibilityConverter}}"
                                       Style="{StaticResource DefaultTextStyle}">
                                <Run Text="{Binding SelectedCabinSlotFloor, StringFormat={}(Floor {0}}"/><Run Text=","/>
                                <Run Text="{Binding SelectedCabinSlot.Row, StringFormat={}Row {0}}"/><Run Text=","/>
                                <Run Text="{Binding SelectedCabinSlot.Column, StringFormat={}Column {0})}"/>
                    </TextBlock>
                </StackPanel>
                <UniformGrid Rows="1">
                    <StackPanel Margin="4">
                        <TextBlock Text="Slot type" Margin="0,0,0,4" Style="{StaticResource DefaultTextStyle}"/>
                        <ComboBox ItemsSource="{Binding Source={enum:EnumBindingSource {x:Type enum:CabinSlotType}}}"
                                          SelectedIndex="{Binding SelectedCabinSlot.TypeId}"/>
                    </StackPanel>
                    <StackPanel Margin="4">
                        <TextBlock Margin="0,0,0,4">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource DefaultTextStyle}">
                                    <Setter Property="Text" Value="Seat number"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SelectedCabinSlot.IsDoor, UpdateSourceTrigger=PropertyChanged}" 
                                                             Value="True">
                                            <Setter Property="Text" Value="Door number"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBox Text="{Binding SelectedCabinSlot.SlotNumber, UpdateSourceTrigger=PropertyChanged}" 
                                         IsEnabled="{Binding SelectedCabinSlot.HasSlotNumber, UpdateSourceTrigger=PropertyChanged, FallbackValue=False, TargetNullValue=False}"/>
                    </StackPanel>
                    <StackPanel Margin="4">
                        <TextBlock Margin="0,0,0,4" Text="Seat letter" Style="{StaticResource DefaultTextStyle}"/>
                        <TextBox Text="{Binding SelectedCabinSlot.SeatLetter, UpdateSourceTrigger=PropertyChanged}" 
                                         IsEnabled="{Binding SelectedCabinSlot.IsSeat, UpdateSourceTrigger=PropertyChanged, FallbackValue=False, TargetNullValue=False}"/>
                    </StackPanel>
                </UniformGrid>
            </StackPanel>
            <DockPanel IsEnabled="{Binding SelectedCabinLayout, Converter={StaticResource NotNullToBooleanConverter}}">
                <DockPanel DockPanel.Dock="Top">
                    <Button DockPanel.Dock="Right" Content="Add deck" Padding="8,0" Click="AddCabinDeck_Click"/>
                    <TextBlock Text="{Binding SelectedLayoutSet.AirplaneName, StringFormat={}Cabin layout for {0}}"
                                   FontSize="22" Style="{StaticResource DefaultTextStyle}"/>
                </DockPanel>
                <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                                      Margin="4,8">
                    <DataGrid AutoGenerateColumns="False" Background="Transparent" HeadersVisibility="None"
                                      ItemsSource="{Binding SelectedCabinLayout.CabinDecks}"
                                      x:Name="layout_decks" GridLinesVisibility="None"
                                      VerticalScrollBarVisibility="Hidden" BorderBrush="Transparent" 
                                      CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" 
                                      CanUserResizeColumns="False" CanUserSortColumns="False">
                        <DataGrid.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Transparent" />
                            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent"/>
                        </DataGrid.Resources>
                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Background" Value="Transparent"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{StaticResource BackdropColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn>
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <controls:DeckLayoutControl x:Name="layout" CabinDeck="{Binding}"
                                                                    CabinSlotClicked="layout_CabinSlotClicked"
                                                                    LayoutRegenerated="layout_LayoutRegenerated"
                                                                    RemoveDeckClicked="layout_RemoveDeckClicked"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </ScrollViewer>
            </DockPanel>
        </DockPanel>
    </DockPanel>
    <Grid Background="{StaticResource BackdropColor}"
          Visibility="{Binding Dialog, Converter={StaticResource NotNullToVisibilityConverter}}">
        <ContentPresenter Content="{Binding Dialog}"/>
    </Grid>
</Grid>
