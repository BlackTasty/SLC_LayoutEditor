<Grid x:Class="SLC_LayoutEditor.UI.LayoutEditor"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:vm="clr-namespace:SLC_LayoutEditor.ViewModel"
      xmlns:dvm="clr-namespace:SLC_LayoutEditor.ViewModel.DesignTime"
      xmlns:controls="clr-namespace:SLC_LayoutEditor.Controls"
      xmlns:enum="clr-namespace:SLC_LayoutEditor.Core.Enum"
      xmlns:converter="clr-namespace:SLC_LayoutEditor.Converter"
      xmlns:local="clr-namespace:SLC_LayoutEditor.UI"
      mc:Ignorable="d"
      d:DesignWidth="1200"
      d:DesignHeight="650"
      d:DataContext="{d:DesignInstance {x:Type dvm:LayoutEditorDesignViewModel}, IsDesignTimeCreatable=True}"
      Loaded="Grid_Loaded">
    <Grid.DataContext>
        <vm:LayoutEditorViewModel/>
    </Grid.DataContext>
    <Grid.Resources>
        <converter:AircraftListSortConverter x:Key="AircraftListSortConverter"/>
        <converter:ModifyNumberConverter x:Key="ModifyNumberConverter"/>

        <Style x:Key="CabinSlotDropdownStyle" TargetType="ComboBox" BasedOn="{StaticResource TopListComboBoxStyle}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition SharedSizeGroup="slotPreview" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding}" Margin="0,0,12,0"/>
                            <Border CornerRadius="4" BorderThickness="1.5" Grid.Column="1"
                                                                        Width="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ActualHeight}">
                                <Border.Style>
                                    <Style TargetType="Border">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding}" Value="0">
                                                <Setter Property="BorderBrush" Value="{StaticResource AisleColorBrush}"/>
                                                <Setter Property="Background" Value="{StaticResource AisleColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="1">
                                                <Setter Property="Background" Value="{StaticResource WallColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource WallColorBorderBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="2">
                                                <Setter Property="BorderBrush" Value="{StaticResource DoorColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="3">
                                                <Setter Property="BorderBrush" Value="{StaticResource LoadingBayColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="4">
                                                <Setter Property="BorderBrush" Value="{StaticResource CateringDoorColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="5">
                                                <Setter Property="BorderBrush" Value="{StaticResource CockpitColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="6">
                                                <Setter Property="Background" Value="{StaticResource CrewAreaColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource CrewAreaBorderColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="7">
                                                <Setter Property="BorderBrush" Value="{StaticResource ToiletColorBrush}"/>
                                                <Setter Property="Background" Value="{StaticResource ToiletColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="8">
                                                <Setter Property="BorderBrush" Value="{StaticResource KitchenColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="9">
                                                <Setter Property="BorderBrush" Value="{StaticResource IntercomColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="10">
                                                <Setter Property="Background" Value="{StaticResource StairwellColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource StairwellBorderColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="11">
                                                <Setter Property="Background" Value="{StaticResource BusinessClassColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource BusinessClassColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="12">
                                                <Setter Property="Background" Value="{StaticResource EconomyClassColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource EconomyClassColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="13">
                                                <Setter Property="Background" Value="{StaticResource FirstClassColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource FirstClassColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="14">
                                                <Setter Property="Background" Value="{StaticResource PremiumClassColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource PremiumClassColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="15">
                                                <Setter Property="Background" Value="{StaticResource SupersonicClassColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource SupersonicClassColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="16">
                                                <Setter Property="Background" Value="{StaticResource UnavailableSeatColorBrush}"/>
                                                <Setter Property="BorderBrush" Value="{StaticResource UnavailableSeatColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="17">
                                                <Setter Property="BorderBrush" Value="{DynamicResource ServicePointStartColorBrush}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding}" Value="18">
                                                <Setter Property="BorderBrush" Value="{DynamicResource ServicePointEndColorBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                            </Border>
                        </Grid>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MultiSelectDetailsStyle" TargetType="TextBlock" BasedOn="{StaticResource Title3TextStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSingleCabinSlotSelected, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsAutomationChecked, UpdateSourceTrigger=PropertyChanged}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <ContextMenu x:Key="GuideMenu">
            <MenuItem Header="Help" Click="ShowGuide_Click"/>
        </ContextMenu>
    </Grid.Resources>
    <Grid.ColumnDefinitions>
        <ColumnDefinition x:Name="column_sidebar" Width="365"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
    </Grid.ColumnDefinitions>
    <Grid.Style>
        <Style TargetType="Grid">
            <Setter Property="Effect" Value="{x:Null}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoadingLayout}" Value="True">
                    <Setter Property="Effect" Value="{StaticResource DisableBlur}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Grid.Style>
    <controls:CabinLayoutControl x:Name="control_layout"
                                 IsEnabled="{Binding ActiveLayout, Converter={StaticResource NotNullToBooleanConverter}}"
                                 CabinLayout="{Binding ActiveLayout, UpdateSourceTrigger=PropertyChanged}"
                                 IsSidebarOpen="{Binding IsSidebarOpen}"
                                 CabinSlotClicked="CabinLayout_CabinSlotClicked"
                                 SelectedSlotsChanged="CabinLayout_SelectedSlotsChanged"
                                 Changed="CabinLayoutChanged"
                                 TemplatingModeToggled="Layout_TemplatingModeToggled"
                                 TemplateCreated="Layout_TemplateCreated"
                                 LayoutReloaded="Layout_LayoutReloaded"
                                 SelectedDeckChanged="Layout_SelectedDeckChanged"
                                 GuideMenu="{StaticResource GuideMenu}"
                                 controls:GuideAssist.Title="{StaticResource GuideEditorAreaTitle}"
                                 controls:GuideAssist.Description="{StaticResource GuideEditorAreaDescription}"
                                 controls:GuideAssist.HasGuide="True"
                                 controls:GuideAssist.TextPosition="Over"
                                 controls:GuideAssist.IsCircularCutout="False"
                                 controls:GuideAssist.Margin="32">
        <controls:CabinLayoutControl.Style>
            <Style TargetType="controls:CabinLayoutControl">
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="Grid.ColumnSpan" Value="2"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSidebarOpen}" Value="False">
                        <Setter Property="Grid.Column" Value="0"/>
                        <Setter Property="Grid.ColumnSpan" Value="3"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </controls:CabinLayoutControl.Style>
    </controls:CabinLayoutControl>
    <controls:TodoList x:Name="todoList" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Top">
        <controls:TodoList.Style>
            <Style TargetType="controls:TodoList">
                <Setter Property="Margin" Value="0,84,0,0"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=control_layout, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter Property="Margin" Value="0,84,12,0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </controls:TodoList.Style>
    </controls:TodoList>
    <DockPanel Margin="8,0" LastChildFill="False">
        <Border x:Name="card_layoutSelect" DockPanel.Dock="Top" Style="{DynamicResource CardStyle}"
                Visibility="{Binding IsSidebarOpen, Converter={StaticResource BooleanToVisibilityConverter}}"
                controls:GuideAssist.Title="{StaticResource GuideSelectorCardTitle}"
                controls:GuideAssist.Description="{StaticResource GuideSelectorCardDescription}"
                controls:GuideAssist.HasGuide="True"
                controls:GuideAssist.TextPosition="Right"
                controls:GuideAssist.IsCircularCutout="False"
                Cursor="Help"
                ContextMenu="{StaticResource GuideMenu}">
            <StackPanel>
                <DockPanel Margin="0,0,0,8">
                    <ToggleButton x:Name="toggle_editorMode" Style="{StaticResource TemplateSwitchToggleButton}" DockPanel.Dock="Right"
                                  IsChecked="{Binding ElementName=control_layout, Path=IsTemplatingMode, UpdateSourceTrigger=PropertyChanged}"
                                  controls:GuideAssist.Title="{StaticResource GuideToggleEditorModeTitle}"
                                  controls:GuideAssist.Description="{StaticResource GuideToggleEditorModeDescription}"
                                  controls:GuideAssist.HasGuide="True"
                                  controls:GuideAssist.RadiusOffset="-8"
                                  controls:GuideAssist.HighlightXOffset="-2"
                                  controls:GuideAssist.TextPosition="Right"
                                  Cursor="Help"
                                  ContextMenu="{StaticResource GuideMenu}"/>
                    <TextBlock DockPanel.Dock="Right" Margin="6,0,6,2" VerticalAlignment="Center"
                                   Foreground="{DynamicResource ForegroundSecondaryColorBrush}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Text" Value="Show layouts"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=control_layout, Path=IsTemplatingMode, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                        <Setter Property="Text" Value="Show templates"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock Text="Aircrafts" Margin="4,0" Style="{StaticResource Title3TextStyle}"/>
                </DockPanel>
                <DockPanel Margin="8,0" x:Name="area_aircrafts">
                    <Button x:Name="btn_createAircraft" DockPanel.Dock="Right" Width="22" Height="22" ToolTip="Add a new aircraft"
                            Click="AddAircraft_Click" Style="{StaticResource DefaultBorderedIconButtonStyle}" Content="{StaticResource Add}"
                            controls:GuideAssist.Title="{StaticResource GuideCreateAircraftTitle}"
                            controls:GuideAssist.Description="{StaticResource GuideCreateAircraftDescription}"
                            controls:GuideAssist.HasGuide="True"
                            controls:GuideAssist.TextPosition="Right"
                            Cursor="Help"
                            ContextMenu="{StaticResource GuideMenu}"/>
                    <controls:RefinedComboBox x:Name="combo_layoutSets" Margin="0,4,8,4"
                                              ItemsSource="{Binding LayoutSets, Converter={StaticResource AircraftListSortConverter}}"
                                              SelectedItem="{Binding SelectedLayoutSet}" Grid.IsSharedSizeScope="True"
                                              Watermark="{Binding SelectedLayoutSetText}"
                                              Text="{Binding SelectedLayoutSet.AircraftName, Mode=OneWay}"
                                              SelectionChanged="Aircrafts_SelectionChanged">
                        <controls:RefinedComboBox.Style>
                            <Style TargetType="controls:RefinedComboBox" BasedOn="{StaticResource {x:Type controls:RefinedComboBox}}">
                                <Setter Property="ItemTemplate">
                                    <Setter.Value>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="1.5"/>
                                                    <ColumnDefinition SharedSizeGroup="layoutCount" Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding AircraftName}" Margin="0,0,8,0"/>
                                                <Border BorderThickness="1,0" BorderBrush="{DynamicResource ComboBoxItemSplitterColorBrush}"
                                                        DockPanel.Dock="Right" Grid.Column="1" Margin="0,-4,0,-16"/>
                                                <TextBlock DockPanel.Dock="Right" FontStyle="Italic" Margin="8,0,0,0"
                                                           Grid.Column="2" TextAlignment="Right">
                                                    <TextBlock.Style>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="Foreground" Value="{DynamicResource ForegroundSecondaryColorBrush}"/>
                                                            <Setter Property="Text" Value="{Binding CurrentCountText}"/>
                                                            <Style.Triggers>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsTemplatingMode}" Value="False"/>
                                                                        <Condition Binding="{Binding LayoutCount}" Value="0"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{DynamicResource NoLayoutsColorBrush}"/>
                                                                    <Setter Property="Text" Value="No layouts"/>
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsTemplatingMode}" Value="True"/>
                                                                        <Condition Binding="{Binding TemplateCount}" Value="0"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter Property="Foreground" Value="{DynamicResource NoLayoutsColorBrush}"/>
                                                                    <Setter Property="Text" Value="No templates"/>
                                                                </MultiDataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </controls:RefinedComboBox.Style>
                    </controls:RefinedComboBox>
                </DockPanel>
                <Border Margin="-12,12,-12,-12" Style="{DynamicResource CardStyle}" Background="{DynamicResource RemoveDeckButtonPressedBackgroundBrush}"
                        Effect="{x:Null}" CornerRadius="12,12,8,8"
                        IsEnabled="{Binding IsAddCabinLayoutButtonEnabled}">
                    <Grid Margin="4">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal" Margin="0,0,0,4">
                                <TextBlock>
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource Title3TextStyle}">
                                            <Setter Property="Text" Value="Cabin layouts"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsTemplatingMode}" Value="True">
                                                    <Setter Property="Text" Value="Templates"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <ProgressBar DockPanel.Dock="Top" IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}"
                                             Margin="10,0,0,-2" Height="16" Width="16" VerticalAlignment="Center"
                                             Visibility="{Binding SelectedLayoutSet.IsLoadingLayouts, Converter={StaticResource BooleanToVisibilityConverter}, TargetNullValue=Collapsed, FallbackValue=Collapsed}"/>
                            </StackPanel>
                            <DockPanel x:Name="area_layouts" 
                                       DockPanel.Dock="Top" IsEnabled="{Binding IsAddCabinLayoutButtonEnabled}" Margin="4,0">
                                <Button x:Name="btn_createLayout" DockPanel.Dock="Right" Width="22" Height="22" ToolTip="{Binding AddLayoutTooltip}" Content="{StaticResource Add}"
                                        Click="CreateCabinLayout_Click" Style="{Binding AddLayoutButtonStyle}"
                                        controls:GuideAssist.Title="{Binding AddLayoutGuideTitle}"
                                        controls:GuideAssist.Description="{Binding AddLayoutGuideDescription}"
                                        controls:GuideAssist.HasGuide="True"
                                        Cursor="Help"
                                        ContextMenu="{StaticResource GuideMenu}">
                                </Button>
                                <StackPanel>
                                    <controls:RefinedComboBox x:Name="combo_layouts" Margin="0,4,8,4"
                                                              DisplayMemberPath="LayoutName"
                                                              ItemsSource="{Binding SelectedLayoutSet.CabinLayouts, UpdateSourceTrigger=PropertyChanged}"
                                                              SelectedItem="{Binding SelectedCabinLayout}"
                                                              Watermark="{Binding SelectedLayoutText}"
                                                              IsEnabled="{Binding SelectedLayoutSet.IsCabinLayoutSelectionEnabled}"
                                                              Visibility="{Binding IsTemplatingMode, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                                                              SelectionChanged="Layouts_SelectionChanged"/>
                                    <controls:RefinedComboBox x:Name="combo_templates" Margin="0,4,8,4"
                                                              DisplayMemberPath="LayoutName"
                                                              ItemsSource="{Binding SelectedLayoutSet.Templates, UpdateSourceTrigger=PropertyChanged}"
                                                              Style="{StaticResource TemplateComboBoxStyle}"
                                                              SelectedItem="{Binding SelectedTemplate}"
                                                              Watermark="{Binding SelectedTemplateText}"
                                                              IsEnabled="{Binding SelectedLayoutSet.IsCabinLayoutSelectionEnabled}"
                                                              Visibility="{Binding IsTemplatingMode, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                </StackPanel>
                            </DockPanel>
                        </StackPanel>
                    </Grid>
                </Border>
            </StackPanel>
        </Border>
        <Border DockPanel.Dock="Top" Background="{DynamicResource BackgroundDarkBrush}" Padding="4" Margin="0,8"
                BorderBrush="{DynamicResource LayoutingModeBorderBrush}" CornerRadius="4" BorderThickness="1.5">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActiveLayout, Converter={StaticResource NotNullToBooleanConverter}}" Value="True"/>
                                <Condition Binding="{Binding IsSidebarOpen}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <StackPanel>
                <UniformGrid Columns="3">
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="SUPER"
                                              Capacity="{Binding ActiveLayout.SupersonicCapacity}"
                                              BoxBackground="{StaticResource SupersonicClassColorBrush}"
                                              ToolTip="Super class"/>
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="FIRST"
                                              Capacity="{Binding ActiveLayout.FirstClassCapacity}"
                                              BoxBackground="{StaticResource FirstClassColorBrush}"
                                              ToolTip="First class"/>
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="BZ"
                                              Capacity="{Binding ActiveLayout.BusinessCapacity}"
                                              BoxBackground="{StaticResource BusinessClassColorBrush}"
                                              ToolTip="Business class"/>
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="PREM"
                                              Capacity="{Binding ActiveLayout.PremiumCapacity}"
                                              BoxBackground="{StaticResource PremiumClassColorBrush}"
                                              ToolTip="Premium class"/>
                    <controls:SeatCapacityBox Margin="4" SeatTypeLetter="ECO"
                                              Capacity="{Binding ActiveLayout.EconomyCapacity}"
                                              BoxBackground="{StaticResource EconomyClassColorBrush}"
                                              ToolTip="Economy class"/>
                    <controls:SeatCapacityBox Margin="8,4" SeatTypeLetter="Galley"
                                              DockPanel.Dock="Right" TextElement.FontStyle="Italic"
                                              Capacity="{Binding ActiveLayout.GalleyCapacity}"
                                              BoxBackground="{StaticResource CrewAreaBorderColorBrush}"
                                              ToolTip="Galley seats"/>
                </UniformGrid>
                <TextBlock Margin="4" Style="{StaticResource Title2TextStyle}" HorizontalAlignment="Center"
                           FontSize="22"
                           Text="{Binding ActiveLayout.PassengerCapacity, StringFormat={}Total passenger seats: {0}, FallbackValue=Total: 0}"/>
            </StackPanel>
        </Border>
        <controls:IssueTracker x:Name="issue_tracker" DockPanel.Dock="Bottom" DataContext="{Binding}" 
                               IsExpanded="{Binding IsIssueTrackerExpanded}"
                               ContextMenu="{StaticResource GuideMenu}"
                               ShowIssuesChanged="issue_tracker_ShowIssuesChanged">
            <controls:IssueTracker.Style>
                <Style TargetType="controls:IssueTracker">
                    <Setter Property="Margin" Value="0,0,0,4"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsSidebarOpen}" Value="False">
                            <Setter Property="MaxHeight" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:LayoutEditor}, Path=ActualHeight, Converter={StaticResource ModifyNumberConverter}, ConverterParameter=-91}"/>
                            <Setter Property="Margin" Value="24,0,-24,4"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSidebarOpen}" Value="False"/>
                                <Condition Binding="{Binding ElementName=control_layout, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="24,0,-24,17"/>
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </controls:IssueTracker.Style>
        </controls:IssueTracker>
    </DockPanel>
    <Border x:Name="container_slotConfig" VerticalAlignment="Bottom" CornerRadius="12,12,0,0"
            HorizontalAlignment="Center" MinWidth="500"
            Background="{DynamicResource BackgroundDarkBrush}"
            controls:GuideAssist.Title="{Binding SlotSettingsGuideTitle}"
            controls:GuideAssist.Description="{Binding SlotSettingsGuideDescription}"
            controls:GuideAssist.HasGuide="True"
            controls:GuideAssist.IsCircularCutout="False"
            controls:GuideAssist.TextPosition="Top"
            controls:GuideAssist.HeightOffset="1"
            Cursor="Help"
            ContextMenu="{StaticResource GuideMenu}"
            UseLayoutRounding="True">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="BorderThickness" Value="1.5,1.5,1.5,0"/>
                <Setter Property="Padding" Value="10.5,12"/>
                <Setter Property="Grid.Column" Value="1"/>
                <Setter Property="Grid.ColumnSpan" Value="1"/>
                <Setter Property="BorderBrush" Value="{DynamicResource LayoutingModeBorderBrush}"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=control_layout, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter Property="Margin" Value="0,0,0,13"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=control_layout, Path=CabinLayout.IsTemplate, UpdateSourceTrigger=PropertyChanged}" Value="True">
                        <Setter Property="BorderBrush" Value="{DynamicResource TemplatingModeBorderBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsSidebarOpen}" Value="False">
                        <Setter Property="Grid.Column" Value="1"/>
                        <Setter Property="Grid.ColumnSpan" Value="1"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <StackPanel>
            <StackPanel IsEnabled="{Binding ActiveLayout, Converter={StaticResource NotNullToBooleanConverter}}"
                        Margin="0,-3,0,0">
                <DockPanel Margin="0,0,0,6">
                    <ToggleButton x:Name="toggle_slotConfigMode" Style="{StaticResource AutomationSwitchToggleButton}" DockPanel.Dock="Right"
                                  IsChecked="{Binding IsAutomationChecked}"
                                  controls:GuideAssist.Title="{StaticResource GuideToggleSlotModeTitle}"
                                  controls:GuideAssist.Description="{StaticResource GuideToggleSlotModeDescription}"
                                  controls:GuideAssist.HasGuide="True"
                                  controls:GuideAssist.TextPosition="Top"
                                  controls:GuideAssist.RadiusOffset="-8"
                                  Cursor="Help"
                                  Checked="SlotConfigModeToggle_CheckedChanged"
                                  Unchecked="SlotConfigModeToggle_CheckedChanged"
                                  ContextMenu="{StaticResource GuideMenu}"/>
                    <TextBlock DockPanel.Dock="Right" Margin="6,0,6,2" VerticalAlignment="Center"
                               Foreground="{DynamicResource ForegroundSecondaryColorBrush}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                <Setter Property="Text" Value="Configure slot(s)"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsAutomationChecked}" Value="True">
                                        <Setter Property="Text" Value="Automation"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <StackPanel Orientation="Horizontal" Margin="0,0,4,0">
                        <TextBlock>
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource Title3TextStyle}">
                                    <Setter Property="Text" Value="Single slot configuration "/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsSingleCabinSlotSelected, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                            <Setter Property="Text" Value="Configuring"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAutomationChecked, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                            <Setter Property="Text" Value="Automate slot configuration"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Style="{StaticResource MultiSelectDetailsStyle}">
                                <Run Text="{Binding SelectedCabinSlots.Count, Mode=OneWay, StringFormat={} {0} slots}"/>
                                <Run Text="{Binding SelectedFloorText, Mode=OneWay, StringFormat={}on {0}}"/>
                        </TextBlock>
                        <TextBlock Visibility="{Binding ShowSelectedCabinSlotDetails, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"
                                   Style="{StaticResource Title3TextStyle}">
                                <Run Text="{Binding SelectedFloorText, Mode=OneWay, StringFormat={}({0}}"/><Run Text=","/>
                                <Run Text="{Binding SelectedCabinSlot.Row, StringFormat={}Row {0}, Converter={StaticResource OffsetConverter}, ConverterParameter=1}"/><Run Text=","/>
                                <Run Text="{Binding SelectedCabinSlot.Column, StringFormat={}Column {0}), Converter={StaticResource OffsetConverter}, ConverterParameter=1}"/>
                        </TextBlock>
                    </StackPanel>
                </DockPanel>
                <StackPanel Visibility="{Binding IsAutomationChecked, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                            IsEnabled="{Binding SelectedCabinSlot, Converter={StaticResource NotNullToBooleanConverter}, UpdateSourceTrigger=PropertyChanged}"
                            Margin="4,0">
                    <UniformGrid Rows="1"
                                 Visibility="{Binding IsSingleCabinSlotSelected, Converter={StaticResource InverseBooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                        <StackPanel Margin="4">
                            <TextBlock Text="Slot type" Margin="0,0,0,4"/>
                            <ComboBox ItemsSource="{Binding Source={enum:EnumBindingSource {x:Type enum:CabinSlotType}}}"
                                      SelectedIndex="{Binding SelectedMultiSlotTypeIndex}"
                                      SelectionChanged="MultiSelect_SlotTypeSelectionChanged"
                                      Style="{StaticResource CabinSlotDropdownStyle}"/>
                        </StackPanel>
                        <!--<StackPanel Margin="4" IsEnabled="{Binding MultiSlotTypesMatch}">
                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Right"
                                               Visibility="{Binding SelectedCabinSlot.HasSlotNumber, Converter={StaticResource BooleanToVisibilityConverter}}"
                                               Text="{Binding SelectedCabinSlot.MaxSlotNumber, Mode=OneWay, StringFormat={}(max. {0})}"/>
                                    <TextBlock Margin="0,0,0,4">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                                <Setter Property="Text" Value="Seat number"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedCabinSlot.IsDoor, UpdateSourceTrigger=PropertyChanged}" 
                                                                 Value="True">
                                                        <Setter Property="Text" Value="Door number"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DockPanel>
                                <TextBox Text="{Binding SelectedCabinSlot.SlotNumber, UpdateSourceTrigger=PropertyChanged}"
                                         IsEnabled="{Binding SelectedCabinSlot.HasSlotNumber, UpdateSourceTrigger=PropertyChanged, FallbackValue=False, TargetNullValue=False}"/>
                            </StackPanel>
                            <StackPanel Margin="4" IsEnabled="{Binding MultiSlotTypesMatch}">
                                <TextBlock Margin="0,0,0,4" Text="Seat letter"/>
                                <TextBox Text="{Binding SelectedCabinSlot.SeatLetter, UpdateSourceTrigger=PropertyChanged}" 
                                             IsEnabled="{Binding SelectedCabinSlot.IsSeat, UpdateSourceTrigger=PropertyChanged, FallbackValue=False, TargetNullValue=False}"/>
                                <TextBlock Text="{Binding SeatLetterError}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource ErrorTextStyle}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SeatLetterError}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Hidden"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </StackPanel>-->
                    </UniformGrid>
                    <UniformGrid Rows="1"
                                 Visibility="{Binding IsSingleCabinSlotSelected, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                        <StackPanel Margin="4">
                            <TextBlock Text="Slot type" Margin="0,0,0,4"/>
                            <ComboBox ItemsSource="{Binding Source={enum:EnumBindingSource {x:Type enum:CabinSlotType}}}"
                                      SelectedIndex="{Binding SelectedCabinSlotTypeId}"
                                      Style="{StaticResource CabinSlotDropdownStyle}"
                                      SelectionChanged="SlotType_SelectionChanged"/>
                        </StackPanel>
                        <StackPanel Margin="4">
                            <DockPanel>
                                <TextBlock DockPanel.Dock="Right"
                                               Visibility="{Binding SelectedCabinSlot.HasSlotNumber, Converter={StaticResource BooleanToVisibilityConverter}}"
                                               Text="{Binding SelectedCabinSlot.MaxSlotNumber, Mode=OneWay, StringFormat={}(max. {0})}"/>
                                <TextBlock Margin="0,0,0,4">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                            <Setter Property="Text" Value="Seat number"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedCabinSlot.IsDoor, UpdateSourceTrigger=PropertyChanged}" 
                                                                 Value="True">
                                                    <Setter Property="Text" Value="Door number"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DockPanel>
                            <TextBox Text="{Binding SelectedCabinSlot.SlotNumber, UpdateSourceTrigger=PropertyChanged}"
                                         IsEnabled="{Binding SelectedCabinSlot.HasSlotNumber, UpdateSourceTrigger=PropertyChanged, FallbackValue=False, TargetNullValue=False}"/>
                        </StackPanel>
                        <StackPanel Margin="4">
                            <TextBlock Margin="0,0,0,4" Text="Seat letter"/>
                            <TextBox Text="{Binding SelectedCabinSlot.SeatLetter, UpdateSourceTrigger=PropertyChanged}" 
                                             IsEnabled="{Binding SelectedCabinSlot.IsSeat, UpdateSourceTrigger=PropertyChanged, FallbackValue=False, TargetNullValue=False}"/>
                            <TextBlock Text="{Binding SeatLetterError}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource ErrorTextStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SeatLetterError}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                    </UniformGrid>
                </StackPanel>

                <DockPanel Visibility="{Binding IsAutomationChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Button Margin="4,8" Content="Automate" Click="Automate_Click" VerticalAlignment="Top" DockPanel.Dock="Right">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="IsEnabled" Value="False"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedAutomationIndex}" Value="-1">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding SelectedAutomationIndex}" Value="0"/>
                                            <Condition Binding="{Binding AutomationLettersValid}" Value="True"/>
                                            <Condition Binding="{Binding IsSeatLetterCountForAutomationMatching}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding SelectedAutomationIndex}" Value="1"/>
                                            <Condition Binding="{Binding AutomationSelectedDeckValid}"
                                                       Value="True">
                                            </Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding SelectedAutomationIndex}" Value="2">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <StackPanel DockPanel.Dock="Right" ToolTip="When checked, beginning from the first found seat in a row slots that aren't a seat will still increase the seat number when assigning them"
                                VerticalAlignment="Center"
                                Visibility="{Binding SelectedAutomationIndex, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter=0}">
                        <CheckBox Content="Count empty slots" IsChecked="{Binding AutomationCountEmptySlots}"/>
                    </StackPanel>
                    <UniformGrid Rows="1">
                        <StackPanel Margin="4" x:Name="area_automationDropdown">
                            <TextBlock Text="Automation" Margin="0,0,0,4"/>
                            <ComboBox x:Name="combo_slotAutomationType" SelectedIndex="{Binding SelectedAutomationIndex}"
                                      Style="{StaticResource TopListComboBoxStyle}"
                                      Margin="0,0,0,14"
                                      SelectionChanged="Automation_SelectionChanged">
                                <ComboBoxItem Content="Seat numeration" ToolTip="Sets numeration and letters automatically for you"/>
                                <ComboBoxItem Content="Auto walls" ToolTip="Automatically sets walls around your layout"/>
                                <ComboBoxItem Content="(BETA) Service points" ToolTip="Generate service start- and endpoints automatically"/>
                            </ComboBox>
                        </StackPanel>
                        <StackPanel Margin="4" ToolTip="When modifying multiple rows, input each letter for each row. For example, ABC to adjust 3 selected rows to have A, B and C set as letters"
                                        Visibility="{Binding SelectedAutomationIndex, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter=0}">
                            <TextBlock Margin="0,0,0,4" Text="Seat letter(s)"/>
                            <TextBox Text="{Binding AutomationSeatLetters, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Text="{Binding SeatLettersError}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource ErrorTextStyle}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SeatLettersError}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Hidden"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </StackPanel>
                        <StackPanel Margin="4" ToolTip="With which number should the automation start when numbering seats"
                                        Visibility="{Binding SelectedAutomationIndex, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter=0}">
                            <TextBlock Margin="0,0,0,4" Text="Starting number"/>
                            <TextBox Text="{Binding AutomationSeatStartNumber, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                        <StackPanel Margin="4" ToolTip="Select the deck where you want to apply the wall generator"
                                    Visibility="{Binding SelectedAutomationIndex, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter=1}">
                            <TextBlock Margin="0,0,0,4" Text="Target deck"/>
                            <ComboBox ItemsSource="{Binding ActiveLayout.CabinDecks}"
                                      SelectedItem="{Binding AutomationSelectedDeck}"
                                      Style="{StaticResource TopListComboBoxStyle}"/>
                        </StackPanel>
                        <StackPanel Margin="4" ToolTip="Choose how many seat rows a service area can cover at max"
                                    Visibility="{Binding SelectedAutomationIndex, Converter={StaticResource EqualsToVisibilityConverter}, ConverterParameter=2}">
                            <TextBlock Margin="0,0,0,4" Text="Max. seat rows per area"/>
                            <TextBox Text="{Binding MaxRowsPerServiceGroup, UpdateSourceTrigger=PropertyChanged}"/>
                        </StackPanel>
                    </UniformGrid>
                </DockPanel>
            </StackPanel>
        </StackPanel>
    </Border>
    <Grid x:Name="area_fabs" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="2"
          IsEnabled="{Binding ActiveLayout, Converter={StaticResource NotNullToBooleanConverter}}"
          Cursor="Help">
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Margin" Value="8"/>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=control_layout, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                            <Condition Binding="{Binding ElementName=control_layout, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Margin" Value="8,8,8,15"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=control_layout, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="False"/>
                            <Condition Binding="{Binding ElementName=control_layout, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Margin" Value="8,8,15,8"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=control_layout, Path=IsHorizontalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                            <Condition Binding="{Binding ElementName=control_layout, Path=IsVerticalScrollBarVisible, UpdateSourceTrigger=PropertyChanged}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Margin" Value="8,8,15,15"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Button x:Name="btn_saveLayout" Click="SaveLayout_Click" Content="{StaticResource Save}" ToolTip="Save your changes"
                Style="{StaticResource FilledLargeRoundIconButtonStyle}"
                controls:GuideAssist.Title="{StaticResource GuideSavingLayoutsTitle}"
                controls:GuideAssist.Description="{StaticResource GuideSavingLayoutsDescription}"
                controls:GuideAssist.HasGuide="True"
                controls:GuideAssist.RadiusOffset="-48"
                controls:GuideAssist.TextPosition="Top"
                ContextMenu="{StaticResource GuideMenu}"/>
        <Button x:Name="btn_saveAsLayout" VerticalAlignment="Bottom" HorizontalAlignment="Right" Content="{DynamicResource SaveAs}" Padding="6,6,4,4"
                Style="{StaticResource FilledRoundIconButtonStyle}" ToolTip="Save as..." Click="CabinLayout_SaveAs_Click"
                controls:GuideAssist.Title="{StaticResource GuideSavingAsLayoutsTitle}"
                controls:GuideAssist.Description="{StaticResource GuideSavingAsLayoutsDescription}"
                controls:GuideAssist.HasGuide="True"
                controls:GuideAssist.RadiusOffset="-18"
                controls:GuideAssist.TextPosition="Top"
                ContextMenu="{StaticResource GuideMenu}"/>
    </Grid>
    <Grid HorizontalAlignment="Left" VerticalAlignment="Center">
        <Grid.Style>
            <Style TargetType="Grid">
                <Setter Property="Grid.Column" Value="1"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSidebarOpen}" Value="False">
                        <Setter Property="Grid.Column" Value="0"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Grid.Style>
        <Rectangle Fill="{DynamicResource BackgroundDarkBrush}" HorizontalAlignment="Left" Width="2" Height="92"
                   Margin="-1,0,0,0"/>
        <AdornerDecorator Margin="1,0,0,0">
            <ToggleButton x:Name="toggle_sidebar" IsChecked="{Binding IsSidebarOpen}" UseLayoutRounding="True" Loaded="ToggleSidebarButton_Loaded"
                          controls:GuideAssist.Title="{StaticResource GuideToggleSidebarTitle}"
                          controls:GuideAssist.Description="{StaticResource GuideToggleSidebarDescription}"
                          controls:GuideAssist.HasGuide="True"
                          controls:GuideAssist.RadiusOffset="-16"
                          controls:GuideAssist.HighlightXOffset="-8"
                          controls:GuideAssist.TextAreaYOffset="24"
                          controls:GuideAssist.TextAreaXOffset="-8"
                          Cursor="Help"
                          ContextMenu="{StaticResource GuideMenu}">
                <ToggleButton.Style>
                    <Style TargetType="ToggleButton" BasedOn="{StaticResource SidebarToggleButtonStyle}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLayoutTemplate}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource TemplatingModeBorderBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ToggleButton.Style>
            </ToggleButton>
        </AdornerDecorator>
    </Grid>
    <Border Background="{DynamicResource BackdropColorBrush}" Grid.ColumnSpan="3"
            Visibility="{Binding IsLoadingLayout, Converter={StaticResource BooleanToVisibilityConverter}}">
        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="16">
            <TextBlock Style="{StaticResource Title1TextStyle}" HorizontalAlignment="Center">
                <Run Text="Loading cabin layout &quot;"/><Run Text="{Binding ActiveLayout.LayoutName}"/><Run Text="&quot;"/>
            </TextBlock>
            <ProgressBar IsIndeterminate="True" Margin="0,8" Visibility="Collapsed"/>
        </StackPanel>
    </Border>
</Grid>