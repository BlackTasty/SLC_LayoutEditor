<Application x:Class="SLC_LayoutEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:SLC_LayoutEditor"
             xmlns:controls="clr-namespace:SLC_LayoutEditor.Controls"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <SolidColorBrush x:Key="CockpitColor">#00FFFF</SolidColorBrush>
        <SolidColorBrush x:Key="CrewAreaColor">#576C73</SolidColorBrush>
        <SolidColorBrush x:Key="FirstClassColor">#806C00</SolidColorBrush>
        <SolidColorBrush x:Key="BusinessClassColor">#23415A</SolidColorBrush>
        <SolidColorBrush x:Key="PremiumClassColor">#808080</SolidColorBrush>
        <SolidColorBrush x:Key="EconomyClassColor">#222222</SolidColorBrush>
        <SolidColorBrush x:Key="SupersonicClassColor">#6D5310</SolidColorBrush>
        <SolidColorBrush x:Key="UnavailableSeatColor">#71D8FF</SolidColorBrush>
        <SolidColorBrush x:Key="ToiletColor">#FF0000</SolidColorBrush>
        <SolidColorBrush x:Key="StairwellColor">#A66A2E</SolidColorBrush>
        <SolidColorBrush x:Key="WallColor">#3D0000</SolidColorBrush>
        <SolidColorBrush x:Key="DoorColor">#FF0000</SolidColorBrush>
        <SolidColorBrush x:Key="KitchenColor">#191970</SolidColorBrush>
        <SolidColorBrush x:Key="IntercomColor">#FFFFFF</SolidColorBrush>

        <ImageBrush x:Key="CrewAreaIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/seat_galley.png"/>
        <ImageBrush x:Key="FirstClassIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/seat_first_class.png"/>
        <ImageBrush x:Key="BusinessClassIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/seat_business_class.png"/>
        <ImageBrush x:Key="PremiumClassIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/seat_premium_class.png"/>
        <ImageBrush x:Key="EconomyClassIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/seat_economy_class.png"/>
        <ImageBrush x:Key="SupersonicClassIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/seat_supersonic_class.png"/>
        <ImageBrush x:Key="UnavailableSeatIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/seat_unavailable.png"/>
        <ImageBrush x:Key="ToiletIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/toilet.png"/>
        <ImageBrush x:Key="KitchenIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/kitchen.png"/>
        <ImageBrush x:Key="IntercomIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/intercom.png"/>
        <ImageBrush x:Key="WallIcon" ImageSource="pack://application:,,,/SLC_LayoutEditor;component/Resources/wall.png"/>

        <SolidColorBrush x:Key="BackgroundColor">#111111</SolidColorBrush>
        <SolidColorBrush x:Key="ForegroundColor">#FFFFFF</SolidColorBrush>
        <SolidColorBrush x:Key="ErrorForegroundColor">#FFAAAA</SolidColorBrush>
        <SolidColorBrush x:Key="ValidForegroundColor">#CCFFCC</SolidColorBrush>

        <SolidColorBrush x:Key="SlotSelectedColor">#44FFFFFF</SolidColorBrush>
        <SolidColorBrush x:Key="BackdropColor">#99000000</SolidColorBrush>
        <SolidColorBrush x:Key="MenuItemHoverColor">#333333</SolidColorBrush>

        <SolidColorBrush x:Key="ButtonBorderColor">#CCFFCC</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonBorderPressedColor">#538255</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonBackgroundHoverColor">#44CCFFCC</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonBackgroundPressedColor">#44538255</SolidColorBrush>

        <SolidColorBrush x:Key="ButtonYellowBorderColor">#FDFF9E</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonYellowBorderPressedColor">#AAAD51</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonYellowBackgroundHoverColor">#44FDFF9E</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonYellowBackgroundPressedColor">#44AAAD51</SolidColorBrush>

        <SolidColorBrush x:Key="ButtonRedBorderColor">#FF9E9E</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonRedBorderPressedColor">#AD5151</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonRedBackgroundHoverColor">#44FF9E9E</SolidColorBrush>
        <SolidColorBrush x:Key="ButtonRedBackgroundPressedColor">#44AD5151</SolidColorBrush>

        <Style TargetType="TextBlock" x:Key="DefaultTextStyle">
            <Setter Property="Foreground" Value="{StaticResource ForegroundColor}"/>
        </Style>

        <Style TargetType="TextBlock" x:Key="LayoutProblemTextStyle">
            <Setter Property="Foreground" Value="{StaticResource ValidForegroundColor}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="Margin" Value="8,4"/>
        </Style>

        <Style TargetType="ComboBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="22"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Height" Value="22"/>
        </Style>

        <Style TargetType="ProgressBar">
            <Setter Property="Background" Value="{StaticResource BackdropColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource BackdropColor}"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonBorderColor}"/>
        </Style>

        <Style TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColor}"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="YellowButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonYellowBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonYellowBorderColor}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonYellowBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonYellowBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RedButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonRedBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonRedBorderColor}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid">
                            <Border x:Name="border" CornerRadius="2" BorderThickness="1.5" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRedBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ButtonRedBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddRowButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColor}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas>
                            <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}"
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                                <controls:RoundedCornersPolygon.Points>
                                    <PointCollection>
                                        <Point X="0" Y="0"/>
                                        <Point X="30" Y="0"/>
                                        <Point X="30" Y="30"/>
                                    </PointCollection>
                                </controls:RoundedCornersPolygon.Points>
                            </controls:RoundedCornersPolygon>
                            <TextBlock Text="+" Foreground="{TemplateBinding Foreground}" Margin="17,-4,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddColumnButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColor}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas>
                            <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}" 
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                                <controls:RoundedCornersPolygon.Points>
                                    <PointCollection>
                                        <Point X="0" Y="30"/>
                                        <Point X="30" Y="30"/>
                                        <Point X="0" Y="0"/>
                                    </PointCollection>
                                </controls:RoundedCornersPolygon.Points>
                            </controls:RoundedCornersPolygon>
                            <TextBlock Text="+" Foreground="{TemplateBinding Foreground}" Margin="3,9,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SelectRowButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColor}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas>
                            <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}"
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                                <controls:RoundedCornersPolygon.Points>
                                    <PointCollection>
                                        <Point X="0" Y="0"/>
                                        <Point X="30" Y="0"/>
                                        <Point X="30" Y="30"/>
                                    </PointCollection>
                                </controls:RoundedCornersPolygon.Points>
                            </controls:RoundedCornersPolygon>
                            <TextBlock Text=">" Foreground="{TemplateBinding Foreground}" Margin="17,-4,0,0"
                                       SnapsToDevicePixels="True"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RemoveRowButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonRedBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonRedBorderColor}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas>
                            <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}" 
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                                <controls:RoundedCornersPolygon.Points>
                                    <PointCollection>
                                        <Point X="0" Y="30"/>
                                        <Point X="30" Y="30"/>
                                        <Point X="0" Y="0"/>
                                    </PointCollection>
                                </controls:RoundedCornersPolygon.Points>
                            </controls:RoundedCornersPolygon>
                            <TextBlock Text="-" Foreground="{TemplateBinding Foreground}" Margin="5,9,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonRedBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonRedBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="RemoveColumnButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonRedBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonRedBorderColor}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas>
                            <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}"
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                                <controls:RoundedCornersPolygon.Points>
                                    <PointCollection>
                                        <Point X="0" Y="0"/>
                                        <Point X="30" Y="0"/>
                                        <Point X="30" Y="30"/>
                                    </PointCollection>
                                </controls:RoundedCornersPolygon.Points>
                            </controls:RoundedCornersPolygon>
                            <TextBlock Text="-" Foreground="{TemplateBinding Foreground}" Margin="18,-4,0,0"
                                       FontWeight="Bold" SnapsToDevicePixels="True"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonRedBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonRedBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SelectColumnButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource ButtonBorderColor}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonBorderColor}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas>
                            <controls:RoundedCornersPolygon x:Name="border" Fill="Transparent" 
                                                            Stroke="{TemplateBinding BorderBrush}" 
                                                            StrokeThickness="1.5" IsClosed="True"
                                                            ArcRoundness="2">
                                <controls:RoundedCornersPolygon.Points>
                                    <PointCollection>
                                        <Point X="0" Y="30"/>
                                        <Point X="30" Y="30"/>
                                        <Point X="0" Y="0"/>
                                    </PointCollection>
                                </controls:RoundedCornersPolygon.Points>
                            </controls:RoundedCornersPolygon>
                            <TextBlock Text="v" Foreground="{TemplateBinding Foreground}" Margin="4,8,0,0"
                                       SnapsToDevicePixels="True"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundHoverColor}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="border" Value="{StaticResource ButtonBackgroundPressedColor}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Stroke" TargetName="border" Value="{StaticResource SlotSelectedColor}"/>
                                <Setter Property="Foreground" Value="{StaticResource SlotSelectedColor}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="MenuItem">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MenuItemHoverColor}"/>
            <Setter Property="Template" Value="{DynamicResource MenuItemTemplate}"/>
            <Setter Property="Padding" Value="4,2"/>
        </Style>

        <Style TargetType="Menu">
            <Setter Property="Background" Value="#66000000"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundColor}"/>
        </Style>

        <Style TargetType="ContextMenu">
            <Setter Property="BorderBrush" Value="{DynamicResource MenuItemHoverColor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border x:Name="Border"
                            Background="{DynamicResource BackgroundColor}"
                            BorderThickness="1" BorderBrush="{DynamicResource MenuItemHoverColor}">
                            <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="MenuItemTemplate" TargetType="{x:Type MenuItem}">
            <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" 
                    Background="{TemplateBinding Background}" 
                    SnapsToDevicePixels="True" Padding="4">
                <Grid VerticalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" 
                                  Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" 
                                  Width="16"/>
                    <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" 
                      Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="0" Visibility="Collapsed" 
                      VerticalAlignment="Center"/>
                    <TextBlock x:Name="TextElement" Text="{TemplateBinding Header}" 
                                  Grid.Column="1"
                                  Margin="{TemplateBinding Padding}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False"
                           IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" 
                           Placement="Bottom" PlacementTarget="{Binding ElementName=templateRoot}">
                        <Border x:Name="SubMenuBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" 
                            Background="{TemplateBinding Background}" Padding="0">
                            <ScrollViewer x:Name="SubMenuScrollViewer" 
                                  Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}"
                                  Background="{TemplateBinding Background}" Margin="0" Padding="0">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" 
                                               Height="{Binding ActualHeight, ElementName=SubMenuBorder}" 
                                               Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                    </Canvas>
                                    <Rectangle Fill="{TemplateBinding Background}" HorizontalAlignment="Left" Margin="0" Width="0"/>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" 
                                                Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                KeyboardNavigation.TabNavigation="Cycle"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                    <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                </Trigger>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                    <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Background" TargetName="templateRoot" Value="{DynamicResource MenuItemHoverColor}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                    <Setter Property="Foreground" TargetName="TextElement" Value="#FF707070"/>
                </Trigger>
                <Trigger Property="CanContentScroll" SourceName="SubMenuScrollViewer" Value="False">
                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource MenuItemHoverColor}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Application.Resources>
</Application>
